# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SourceOfFunds(str, enum.Enum):
    EARNINGS = "Earnings"
    SAVINGS = "Savings"
    INVESTMENTS_DEPOSITS = "Investments/Deposits"
    WEALTH = "Wealth"
    GIFT = "Gift"
    PENSION = "Pension"

    def visit(
        self,
        earnings: typing.Callable[[], T_Result],
        savings: typing.Callable[[], T_Result],
        investments_deposits: typing.Callable[[], T_Result],
        wealth: typing.Callable[[], T_Result],
        gift: typing.Callable[[], T_Result],
        pension: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SourceOfFunds.EARNINGS:
            return earnings()
        if self is SourceOfFunds.SAVINGS:
            return savings()
        if self is SourceOfFunds.INVESTMENTS_DEPOSITS:
            return investments_deposits()
        if self is SourceOfFunds.WEALTH:
            return wealth()
        if self is SourceOfFunds.GIFT:
            return gift()
        if self is SourceOfFunds.PENSION:
            return pension()
