# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
from .list_header import ListHeader
import typing
from .list_item import ListItem
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ListExisted(UniversalBaseModel):
    """
    List with ID and header
    """

    list_id: typing_extensions.Annotated[str, FieldMetadata(alias="listId")]
    header: ListHeader
    items: typing.List[ListItem] = pydantic.Field()
    """
    List items
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
