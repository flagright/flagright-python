# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class KycStatus(str, enum.Enum):
    SUCCESSFUL = "SUCCESSFUL"
    FAILED = "FAILED"
    NOT_STARTED = "NOT_STARTED"
    IN_PROGRESS = "IN_PROGRESS"
    MANUAL_REVIEW = "MANUAL_REVIEW"

    def visit(
        self,
        successful: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
        not_started: typing.Callable[[], T_Result],
        in_progress: typing.Callable[[], T_Result],
        manual_review: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is KycStatus.SUCCESSFUL:
            return successful()
        if self is KycStatus.FAILED:
            return failed()
        if self is KycStatus.NOT_STARTED:
            return not_started()
        if self is KycStatus.IN_PROGRESS:
            return in_progress()
        if self is KycStatus.MANUAL_REVIEW:
            return manual_review()
