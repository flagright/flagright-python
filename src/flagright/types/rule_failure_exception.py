# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class RuleFailureException(UniversalBaseModel):
    exception_name: typing_extensions.Annotated[str, FieldMetadata(alias="exceptionName")] = pydantic.Field()
    """
    Unique rule identifier
    """

    exception_description: typing_extensions.Annotated[str, FieldMetadata(alias="exceptionDescription")] = (
        pydantic.Field()
    )
    """
    Name of the rule
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
