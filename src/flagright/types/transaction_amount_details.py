# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from .currency_code import CurrencyCode
import typing
from .country_code import CountryCode
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class TransactionAmountDetails(UniversalBaseModel):
    """
    Model for transaction amount details
    """

    transaction_amount: typing_extensions.Annotated[float, FieldMetadata(alias="transactionAmount")] = pydantic.Field()
    """
    Amount of the transaction
    """

    transaction_currency: typing_extensions.Annotated[CurrencyCode, FieldMetadata(alias="transactionCurrency")]
    country: typing.Optional[CountryCode] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
