# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class EmploymentDetails(pydantic.BaseModel):
    """
    Details of User's employment
    """

    employment_sector: typing.Optional[str] = pydantic.Field(
        alias="employmentSector", description="Sector of employment"
    )
    employer_name: typing.Optional[str] = pydantic.Field(alias="employerName", description="Name of the employer")
    business_industry: typing.Optional[typing.List[str]] = pydantic.Field(
        alias="businessIndustry", description="The industry in which the business operates for a business customer"
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
