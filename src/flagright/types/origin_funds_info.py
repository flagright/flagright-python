# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class OriginFundsInfo(UniversalBaseModel):
    """
    Model for origin funds information
    """

    source_of_funds: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sourceOfFunds")] = (
        pydantic.Field(default=None)
    )
    """
    Source of funds for the transaction
    """

    source_of_wealth: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sourceOfWealth")] = (
        pydantic.Field(default=None)
    )
    """
    Source of wealth
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
