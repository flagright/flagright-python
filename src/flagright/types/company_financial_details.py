# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .amount import Amount
from ..core.serialization import FieldMetadata
from .tag import Tag
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class CompanyFinancialDetails(UniversalBaseModel):
    """
    Model for business user company financial details
    """

    expected_transaction_amount_per_month: typing_extensions.Annotated[
        typing.Optional[Amount], FieldMetadata(alias="expectedTransactionAmountPerMonth")
    ] = None
    expected_turnover_per_month: typing_extensions.Annotated[
        typing.Optional[Amount], FieldMetadata(alias="expectedTurnoverPerMonth")
    ] = None
    tags: typing.Optional[typing.List[Tag]] = pydantic.Field(default=None)
    """
    Additional information that can be added via tags
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
