# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .transaction_count_limit import TransactionCountLimit
from ..core.serialization import FieldMetadata
from .transaction_amount_limit import TransactionAmountLimit
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TransactionLimit(UniversalBaseModel):
    transaction_count_limit: typing_extensions.Annotated[
        typing.Optional[TransactionCountLimit], FieldMetadata(alias="transactionCountLimit")
    ] = None
    transaction_amount_limit: typing_extensions.Annotated[
        typing.Optional[TransactionAmountLimit], FieldMetadata(alias="transactionAmountLimit")
    ] = None
    average_transaction_amount_limit: typing_extensions.Annotated[
        typing.Optional[TransactionAmountLimit], FieldMetadata(alias="averageTransactionAmountLimit")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
