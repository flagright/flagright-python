# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class MaritalStatus(str, enum.Enum):
    """
    Marital status of the individual
    """

    DIVORCED = "DIVORCED"
    MARRIED = "MARRIED"
    SINGLE = "SINGLE"
    WIDOWED = "WIDOWED"
    NA = "NA"

    def visit(
        self,
        divorced: typing.Callable[[], T_Result],
        married: typing.Callable[[], T_Result],
        single: typing.Callable[[], T_Result],
        widowed: typing.Callable[[], T_Result],
        na: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is MaritalStatus.DIVORCED:
            return divorced()
        if self is MaritalStatus.MARRIED:
            return married()
        if self is MaritalStatus.SINGLE:
            return single()
        if self is MaritalStatus.WIDOWED:
            return widowed()
        if self is MaritalStatus.NA:
            return na()
