# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .batch_transaction_event_monitoring_result import BatchTransactionEventMonitoringResult
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class BatchTransactionEventMonitoringResults(UniversalBaseModel):
    transaction_events: typing_extensions.Annotated[
        typing.List[BatchTransactionEventMonitoringResult], FieldMetadata(alias="transactionEvents")
    ]
    total_count: typing_extensions.Annotated[float, FieldMetadata(alias="totalCount")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
