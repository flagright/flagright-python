# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ..core.datetime_utils import serialize_datetime
from .transaction_limit import TransactionLimit


class TransactionLimitsPaymentMethodLimits(pydantic.BaseModel):
    ach: typing.Optional[TransactionLimit] = pydantic.Field(alias="ACH")
    card: typing.Optional[TransactionLimit] = pydantic.Field(alias="CARD")
    iban: typing.Optional[TransactionLimit] = pydantic.Field(alias="IBAN")
    upi: typing.Optional[TransactionLimit] = pydantic.Field(alias="UPI")
    generic_bank_account: typing.Optional[TransactionLimit] = pydantic.Field(alias="GENERIC_BANK_ACCOUNT")
    mpesa: typing.Optional[TransactionLimit] = pydantic.Field(alias="MPESA")
    swift: typing.Optional[TransactionLimit] = pydantic.Field(alias="SWIFT")
    wallet: typing.Optional[TransactionLimit] = pydantic.Field(alias="WALLET")
    check: typing.Optional[TransactionLimit] = pydantic.Field(alias="CHECK")

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        json_encoders = {dt.datetime: serialize_datetime}
