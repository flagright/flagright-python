# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .transaction_limit import TransactionLimit
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class TransactionLimitsPaymentMethodLimits(UniversalBaseModel):
    ach: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="ACH")] = None
    card: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="CARD")] = None
    iban: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="IBAN")] = None
    upi: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="UPI")] = None
    generic_bank_account: typing_extensions.Annotated[
        typing.Optional[TransactionLimit], FieldMetadata(alias="GENERIC_BANK_ACCOUNT")
    ] = None
    mpesa: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="MPESA")] = None
    swift: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="SWIFT")] = None
    wallet: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="WALLET")] = None
    check: typing_extensions.Annotated[typing.Optional[TransactionLimit], FieldMetadata(alias="CHECK")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
