# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing_extensions
from .webhook_event_base_triggered_by import WebhookEventBaseTriggeredBy
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class WebhookEventBase(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for the event
    """

    triggered_by: typing_extensions.Annotated[WebhookEventBaseTriggeredBy, FieldMetadata(alias="triggeredBy")] = (
        pydantic.Field()
    )
    """
    Event triggered by a user or system
    """

    created_timestamp: typing_extensions.Annotated[float, FieldMetadata(alias="createdTimestamp")] = pydantic.Field()
    """
    Time at which the event was created. Measured in ms since the Unix epoch.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
