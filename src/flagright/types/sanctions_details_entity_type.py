# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class SanctionsDetailsEntityType(str, enum.Enum):
    CONSUMER_NAME = "CONSUMER_NAME"
    LEGAL_NAME = "LEGAL_NAME"
    SHAREHOLDER = "SHAREHOLDER"
    DIRECTOR = "DIRECTOR"
    NAME_ON_CARD = "NAME_ON_CARD"
    PAYMENT_NAME = "PAYMENT_NAME"
    PAYMENT_BENEFICIARY_NAME = "PAYMENT_BENEFICIARY_NAME"
    BANK_NAME = "BANK_NAME"

    def visit(
        self,
        consumer_name: typing.Callable[[], T_Result],
        legal_name: typing.Callable[[], T_Result],
        shareholder: typing.Callable[[], T_Result],
        director: typing.Callable[[], T_Result],
        name_on_card: typing.Callable[[], T_Result],
        payment_name: typing.Callable[[], T_Result],
        payment_beneficiary_name: typing.Callable[[], T_Result],
        bank_name: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is SanctionsDetailsEntityType.CONSUMER_NAME:
            return consumer_name()
        if self is SanctionsDetailsEntityType.LEGAL_NAME:
            return legal_name()
        if self is SanctionsDetailsEntityType.SHAREHOLDER:
            return shareholder()
        if self is SanctionsDetailsEntityType.DIRECTOR:
            return director()
        if self is SanctionsDetailsEntityType.NAME_ON_CARD:
            return name_on_card()
        if self is SanctionsDetailsEntityType.PAYMENT_NAME:
            return payment_name()
        if self is SanctionsDetailsEntityType.PAYMENT_BENEFICIARY_NAME:
            return payment_beneficiary_name()
        if self is SanctionsDetailsEntityType.BANK_NAME:
            return bank_name()
