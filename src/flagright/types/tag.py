# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Tag(UniversalBaseModel):
    """
    Generic key-value pair model to append a custom variable being sent to Flagright API
    """

    key: str = pydantic.Field()
    """
    Key value when you are creating a custom variable
    """

    value: str = pydantic.Field()
    """
    Value for a given key when you are creating a custom variable
    """

    is_timestamp: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="isTimestamp")] = (
        pydantic.Field(default=None)
    )
    """
    Flag to indicate if the tag value is a timestamp
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
