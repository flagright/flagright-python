# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .sanctions_screening_entity import SanctionsScreeningEntity
import typing_extensions
import typing
from .sanctions_details_entity_type import SanctionsDetailsEntityType
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SanctionsHitContext(UniversalBaseModel):
    entity: SanctionsScreeningEntity
    entity_type: typing_extensions.Annotated[
        typing.Optional[SanctionsDetailsEntityType], FieldMetadata(alias="entityType")
    ] = None
    user_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="userId")] = None
    transaction_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="transactionId")] = None
    rule_instance_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="ruleInstanceId")] = None
    iban: typing.Optional[str] = None
    year_of_birth: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="yearOfBirth")] = None
    search_term: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="searchTerm")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
