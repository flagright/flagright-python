# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from .mpesa_transaction_type import MpesaTransactionType
import typing
from .email_id import EmailId
from .tag import Tag
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class MpesaDetails(UniversalBaseModel):
    """
    Model for Mpesa payment method
    """

    business_short_code: typing_extensions.Annotated[str, FieldMetadata(alias="businessShortCode")] = pydantic.Field()
    """
    Business code
    """

    transaction_type: typing_extensions.Annotated[MpesaTransactionType, FieldMetadata(alias="transactionType")]
    phone_number: typing_extensions.Annotated[str, FieldMetadata(alias="phoneNumber")] = pydantic.Field()
    """
    Contact Number of the account holder
    """

    email_id: typing_extensions.Annotated[typing.Optional[EmailId], FieldMetadata(alias="emailId")] = None
    tags: typing.Optional[typing.List[Tag]] = pydantic.Field(default=None)
    """
    Additional information that can be added via tags
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
