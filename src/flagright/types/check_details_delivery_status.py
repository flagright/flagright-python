# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class CheckDetailsDeliveryStatus(str, enum.Enum):
    COMPLETED = "COMPLETED"
    PENDING = "PENDING"
    SETTLED = "SETTLED"
    CANCELED = "CANCELED"
    REFUND = "REFUND"
    DECLINED = "DECLINED"

    def visit(
        self,
        completed: typing.Callable[[], T_Result],
        pending: typing.Callable[[], T_Result],
        settled: typing.Callable[[], T_Result],
        canceled: typing.Callable[[], T_Result],
        refund: typing.Callable[[], T_Result],
        declined: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is CheckDetailsDeliveryStatus.COMPLETED:
            return completed()
        if self is CheckDetailsDeliveryStatus.PENDING:
            return pending()
        if self is CheckDetailsDeliveryStatus.SETTLED:
            return settled()
        if self is CheckDetailsDeliveryStatus.CANCELED:
            return canceled()
        if self is CheckDetailsDeliveryStatus.REFUND:
            return refund()
        if self is CheckDetailsDeliveryStatus.DECLINED:
            return declined()
