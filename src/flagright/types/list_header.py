# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .list_metadata import ListMetadata
from .list_subtype import ListSubtype
from .list_type import ListType


class ListHeader(UniversalBaseModel):
    list_id: typing_extensions.Annotated[str, FieldMetadata(alias="listId")]
    list_type: typing_extensions.Annotated[ListType, FieldMetadata(alias="listType")]
    subtype: ListSubtype
    metadata: typing.Optional[ListMetadata] = None
    created_timestamp: typing_extensions.Annotated[float, FieldMetadata(alias="createdTimestamp")]
    size: typing.Optional[float] = None
    version: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
